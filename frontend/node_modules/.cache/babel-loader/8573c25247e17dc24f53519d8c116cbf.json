{"ast":null,"code":"var _jsxFileName = \"/Users/nandinineralagi/hw3/hw3-santorini-ndnrlg/frontend/src/App.tsx\";\nimport Handlebars from \"handlebars\";\nimport { Component } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar oldHref = \"http://localhost:3000\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cells: [{\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=0&y=0\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=1&y=0\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=2&y=0\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=3&y=0\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=4&y=0\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=0&y=1\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=1&y=1\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=2&y=1\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=3&y=1\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=4&y=1\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=0&y=2\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=1&y=2\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=2&y=2\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=3&y=2\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=4&y=2\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=0&y=3\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=1&y=3\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=2&y=3\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=3&y=3\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=4&y=3\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=0&y=4\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=1&y=4\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=2&y=4\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=3&y=4\"\n      }, {\n        text: \"\",\n        clazz: \"playable\",\n        link: \"/play?x=4&y=4\"\n      }],\n      template: this.loadTemplate(),\n      instructions: \"It is Player A's turn\",\n      godCards: \"Player A God Card: N/A, Player B God Card: N/A\"\n    };\n  }\n\n  loadTemplate() {\n    const src = document.getElementById(\"handlebars\");\n    return Handlebars.compile(src === null || src === void 0 ? void 0 : src.innerHTML, {});\n  }\n\n  convertToCell(p) {\n    const newCells = [];\n\n    for (var i = 0; i < p[\"cells\"].length; i++) {\n      var c = {\n        text: p[\"cells\"][i][\"text\"],\n        clazz: p[\"cells\"][i][\"clazz\"],\n        link: p[\"cells\"][i][\"link\"]\n      };\n      newCells.push(c);\n    }\n\n    return newCells;\n  }\n\n  getGodCardA(p) {\n    return p[\"godCardA\"];\n  }\n\n  getGodCardB(p) {\n    return p[\"godCardB\"];\n  }\n\n  getTurn(p) {\n    return p[\"turn\"];\n  }\n\n  getWinner(p) {\n    return p[\"winner\"];\n  }\n\n  getInstr(turn, winner) {\n    if (winner === undefined) return \"It is Player \" + turn + \"'s turn. \";else return \"Player \" + winner + \" wins!\";\n  }\n\n  async newGame() {\n    const response = await fetch(\"newgame\");\n    const json = await response.json();\n    const newCells = this.convertToCell(json);\n    this.setState({\n      cells: newCells,\n      instructions: \"It is Player A's turn\",\n      godCards: \"Player A God Card: N/A , Player B God Card: N/A\"\n    });\n  }\n\n  async none() {\n    const response = await fetch(\"none\");\n    const json = await response.json();\n    const newCells = this.convertToCell(json);\n    const turn = this.getTurn(json);\n    const winner = this.getWinner(json);\n    const godCardA = this.getGodCardA(json);\n    const godCardB = this.getGodCardB(json);\n    const gods = \"Player A God Card: \" + godCardA + \", Player B God Card: \" + godCardB;\n    const instr = this.getInstr(turn, winner);\n    this.setState({\n      cells: newCells,\n      instructions: instr,\n      godCards: gods\n    });\n  }\n\n  async demeterCard() {\n    const response = await fetch(\"demeter\");\n    const json = await response.json();\n    const newCells = this.convertToCell(json);\n    const turn = this.getTurn(json);\n    const winner = this.getWinner(json);\n    const godCardA = this.getGodCardA(json);\n    const godCardB = this.getGodCardB(json);\n    const gods = \"Player A God Card: \" + godCardA + \", Player B God Card: \" + godCardB;\n    const instr = this.getInstr(turn, winner);\n    this.setState({\n      cells: newCells,\n      instructions: instr,\n      godCards: gods\n    });\n  }\n\n  async minotaurCard() {\n    const response = await fetch(\"minotaur\");\n    const json = await response.json();\n    const newCells = this.convertToCell(json);\n    const turn = this.getTurn(json);\n    const winner = this.getWinner(json);\n    const godCardA = this.getGodCardA(json);\n    const godCardB = this.getGodCardB(json);\n    const gods = \"Player A God Card: \" + godCardA + \", Player B God Card: \" + godCardB;\n    const instr = this.getInstr(turn, winner);\n    this.setState({\n      cells: newCells,\n      instructions: instr,\n      godCards: gods\n    });\n  }\n\n  async panCard() {\n    const response = await fetch(\"pan\");\n    const json = await response.json();\n    const newCells = this.convertToCell(json);\n    const turn = this.getTurn(json);\n    const winner = this.getWinner(json);\n    const godCardA = this.getGodCardA(json);\n    const godCardB = this.getGodCardB(json);\n    const gods = \"Player A God Card: \" + godCardA + \", Player B God Card: \" + godCardB;\n    const instr = this.getInstr(turn, winner);\n    this.setState({\n      cells: newCells,\n      instructions: instr,\n      godCards: gods\n    });\n  }\n\n  async play(url) {\n    const href = \"play?\" + url.split(\"?\")[1];\n    const response = await fetch(href);\n    const json = await response.json();\n    const newCells = this.convertToCell(json);\n    console.log(newCells);\n    const turn = this.getTurn(json);\n    const winner = this.getWinner(json);\n    const godCardA = this.getGodCardA(json);\n    const godCardB = this.getGodCardB(json);\n    const gods = \"Player A God Card: \" + godCardA + \", Player B God Card: \" + godCardB;\n    const instr = this.getInstr(turn, winner);\n    this.setState({\n      cells: newCells,\n      instructions: instr,\n      godCards: gods\n    });\n  }\n\n  async pass() {\n    const response = await fetch(\"pass\");\n    const json = await response.json();\n    const newCells = this.convertToCell(json);\n    const turn = this.getTurn(json);\n    const winner = this.getWinner(json);\n    const instr = this.getInstr(turn, winner);\n    this.setState({\n      cells: newCells,\n      instructions: instr\n    });\n  }\n\n  async switch() {\n    if (window.location.href === \"http://localhost:3000/newgame\" && oldHref !== window.location.href) {\n      this.newGame();\n      oldHref = window.location.href;\n    } else if (window.location.href.split(\"?\")[0] === \"http://localhost:3000/play\" && oldHref !== window.location.href) {\n      this.play(window.location.href);\n      oldHref = window.location.href;\n    } else if (window.location.href === \"http://localhost:3000/none\" && oldHref !== window.location.href) {\n      this.none();\n      oldHref = window.location.href;\n    } else if (window.location.href === \"http://localhost:3000/demeter\" && oldHref !== window.location.href) {\n      this.demeterCard();\n      oldHref = window.location.href;\n    } else if (window.location.href === \"http://localhost:3000/minotaur\" && oldHref !== window.location.href) {\n      this.minotaurCard();\n      oldHref = window.location.href;\n    } else if (window.location.href === \"http://localhost:3000/pan\" && oldHref !== window.location.href) {\n      this.panCard();\n      oldHref = window.location.href;\n    } else if (window.location.href === \"http://localhost:3000/pass\" && oldHref !== window.location.href) {\n      this.pass();\n      oldHref = window.location.href;\n    }\n  }\n\n  render() {\n    this.switch();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: this.state.template({\n            cells: this.state.cells,\n            instructions: this.state.instructions,\n            godCards: this.state.godCards\n          })\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/nandinineralagi/hw3/hw3-santorini-ndnrlg/frontend/src/App.tsx"],"names":["Handlebars","Component","oldHref","App","constructor","props","state","cells","text","clazz","link","template","loadTemplate","instructions","godCards","src","document","getElementById","compile","innerHTML","convertToCell","p","newCells","i","length","c","push","getGodCardA","getGodCardB","getTurn","getWinner","getInstr","turn","winner","undefined","newGame","response","fetch","json","setState","none","godCardA","godCardB","gods","instr","demeterCard","minotaurCard","panCard","play","url","href","split","console","log","pass","switch","window","location","render","__html"],"mappings":"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","sourcesContent":["import Handlebars from \"handlebars\"\nimport { Component } from 'react'\nimport './App.css'\n\nvar oldHref = \"http://localhost:3000\"\n\ninterface Cell {\n  text: String;\n  clazz: String;\n  link: String;\n}\n\ninterface Cells {\n  cells: Array<Cell>,\n  template: HandlebarsTemplateDelegate<any>,\n  instructions: String\n  godCards: String\n}\n\ninterface Props {\n}\n\nclass App extends Component<Props, Cells> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      cells: [\n        { text: \"\", clazz: \"playable\", link: \"/play?x=0&y=0\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=1&y=0\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=2&y=0\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=3&y=0\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=4&y=0\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=0&y=1\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=1&y=1\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=2&y=1\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=3&y=1\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=4&y=1\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=0&y=2\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=1&y=2\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=2&y=2\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=3&y=2\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=4&y=2\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=0&y=3\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=1&y=3\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=2&y=3\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=3&y=3\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=4&y=3\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=0&y=4\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=1&y=4\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=2&y=4\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=3&y=4\" },\n        { text: \"\", clazz: \"playable\", link: \"/play?x=4&y=4\" },\n      ],\n      template: this.loadTemplate(),\n      instructions: \"It is Player A's turn\",\n      godCards: \"Player A God Card: N/A, Player B God Card: N/A\"\n    };\n    \n  }\n\n  loadTemplate (): HandlebarsTemplateDelegate<any> {\n    const src = document.getElementById(\"handlebars\");\n    return Handlebars.compile(src?.innerHTML, {});\n  }\n\n  convertToCell(p: any): Array<Cell> {\n    const newCells: Array<Cell> = [];\n    for (var i = 0; i < p[\"cells\"].length; i++) {\n      var c: Cell = {\n        text: p[\"cells\"][i][\"text\"],\n        clazz: p[\"cells\"][i][\"clazz\"],\n        link: p[\"cells\"][i][\"link\"],\n      };\n      newCells.push(c);\n    }\n\n    return newCells;\n  }\n\n  getGodCardA(p: any) : String {\n    return p[\"godCardA\"]\n  }\n\n  getGodCardB(p: any) : String {\n    return p[\"godCardB\"]\n  }\n\n  getTurn(p: any): String {\n    return p[\"turn\"]\n  }\n\n  getWinner(p: any): String | undefined {\n    return p[\"winner\"]\n  }\n\n  getInstr(turn: String, winner: String | undefined) {\n    if (winner === undefined) return \"It is Player \" + turn + \"'s turn. \"\n    else return \"Player \" + winner + \" wins!\"\n  }\n\n  async newGame() {\n    const response = await fetch(\"newgame\");\n    const json = await response.json();\n\n    const newCells: Array<Cell> = this.convertToCell(json);\n    this.setState({ cells: newCells, instructions: \"It is Player A's turn\", godCards: \"Player A God Card: N/A , Player B God Card: N/A\" })\n  }\n\n  async none() {\n    const response = await fetch(\"none\");\n    const json = await response.json();\n\n    const newCells: Array<Cell> = this.convertToCell(json);\n    const turn = this.getTurn(json)\n    const winner = this.getWinner(json)\n    const godCardA = this.getGodCardA(json)\n    const godCardB = this.getGodCardB(json)\n    const gods = \"Player A God Card: \" + godCardA +  \", Player B God Card: \" + godCardB \n    const instr = this.getInstr(turn, winner)\n    this.setState({ cells: newCells, instructions: instr, godCards: gods})\n  }\n\n  async demeterCard() {\n    const response = await fetch(\"demeter\");\n    const json = await response.json();\n\n    const newCells: Array<Cell> = this.convertToCell(json);\n    const turn = this.getTurn(json)\n    const winner = this.getWinner(json)\n    const godCardA = this.getGodCardA(json)\n    const godCardB = this.getGodCardB(json)\n    const gods = \"Player A God Card: \" + godCardA +  \", Player B God Card: \" + godCardB \n    const instr = this.getInstr(turn, winner)\n    this.setState({ cells: newCells, instructions: instr, godCards: gods})\n  }\n\n  async minotaurCard() {\n    const response = await fetch(\"minotaur\");\n    const json = await response.json();\n\n    const newCells: Array<Cell> = this.convertToCell(json);\n    const turn = this.getTurn(json)\n    const winner = this.getWinner(json)\n    const godCardA = this.getGodCardA(json)\n    const godCardB = this.getGodCardB(json)\n    const gods = \"Player A God Card: \" + godCardA +  \", Player B God Card: \" + godCardB \n    const instr = this.getInstr(turn, winner)\n    this.setState({ cells: newCells, instructions: instr, godCards: gods})\n  }\n  async panCard() {\n    const response = await fetch(\"pan\");\n    const json = await response.json();\n\n    const newCells: Array<Cell> = this.convertToCell(json);\n    const turn = this.getTurn(json)\n    const winner = this.getWinner(json)\n    const godCardA = this.getGodCardA(json)\n    const godCardB = this.getGodCardB(json)\n    const gods = \"Player A God Card: \" + godCardA +  \", Player B God Card: \" + godCardB \n    const instr = this.getInstr(turn, winner)\n    this.setState({ cells: newCells, instructions: instr, godCards: gods})\n  }\n\n  async play(url: String) {\n    const href = \"play?\" + url.split(\"?\")[1];\n    const response = await fetch(href);\n    const json = await response.json();\n\n    const newCells: Array<Cell> = this.convertToCell(json);\n    console.log(newCells)\n    const turn = this.getTurn(json)\n    const winner = this.getWinner(json)\n    const godCardA = this.getGodCardA(json)\n    const godCardB = this.getGodCardB(json)\n    const gods = \"Player A God Card: \" + godCardA +  \", Player B God Card: \" + godCardB \n    const instr = this.getInstr(turn, winner)\n    this.setState({ cells: newCells, instructions: instr, godCards: gods})\n  }\n\n  async pass() {\n    const response = await fetch(\"pass\");\n    const json = await response.json();\n\n    const newCells: Array<Cell> = this.convertToCell(json);\n    const turn = this.getTurn(json)\n    const winner = this.getWinner(json)\n    const instr = this.getInstr(turn, winner)\n    this.setState({ cells: newCells, instructions: instr})\n  }\n\n  async switch() {\n    if (\n      window.location.href === \"http://localhost:3000/newgame\" &&\n      oldHref !== window.location.href\n    ) {\n      this.newGame();\n      oldHref = window.location.href;\n    } else if (\n      window.location.href.split(\"?\")[0] === \"http://localhost:3000/play\" &&\n      oldHref !== window.location.href\n    ) {\n      this.play(window.location.href);\n      oldHref = window.location.href;\n    } \n    else if (\n      window.location.href === \"http://localhost:3000/none\" &&\n      oldHref !== window.location.href\n    ) {\n      this.none();\n      oldHref = window.location.href;\n    }\n    else if (\n      window.location.href === \"http://localhost:3000/demeter\" &&\n      oldHref !== window.location.href\n    ) {\n      this.demeterCard();\n      oldHref = window.location.href;\n    }\n    else if (\n      window.location.href === \"http://localhost:3000/minotaur\" &&\n      oldHref !== window.location.href\n    ) {\n      this.minotaurCard();\n      oldHref = window.location.href;\n    }\n    else if (\n      window.location.href === \"http://localhost:3000/pan\" &&\n      oldHref !== window.location.href\n    ) {\n      this.panCard();\n      oldHref = window.location.href;\n    }\n    else if (\n      window.location.href === \"http://localhost:3000/pass\" &&\n      oldHref !== window.location.href\n    ) {\n      this.pass();\n      oldHref = window.location.href;\n    }\n  };\n\n  render() {\n    this.switch()\n    return (\n      <div className=\"App\">\n        <div\n          dangerouslySetInnerHTML={{\n            __html: this.state.template({ cells: this.state.cells, instructions: this.state.instructions, godCards: this.state.godCards}),\n          }}\n        />\n      </div>\n    )\n  };\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}