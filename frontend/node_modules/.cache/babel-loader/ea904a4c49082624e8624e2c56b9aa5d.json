{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.HandlebarsEnvironment = HandlebarsEnvironment; // istanbul ignore next\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _utils = require('./utils');\n\nvar _exception = require('./exception');\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nvar _helpers = require('./helpers');\n\nvar _decorators = require('./decorators');\n\nvar _logger = require('./logger');\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _internalProtoAccess = require('./internal/proto-access');\n\nvar VERSION = '4.7.7';\nexports.VERSION = VERSION;\nvar COMPILER_REVISION = 8;\nexports.COMPILER_REVISION = COMPILER_REVISION;\nvar LAST_COMPATIBLE_COMPILER_REVISION = 7;\nexports.LAST_COMPATIBLE_COMPILER_REVISION = LAST_COMPATIBLE_COMPILER_REVISION;\nvar REVISION_CHANGES = {\n  1: '<= 1.0.rc.2',\n  // 1.0.rc.2 is actually rev2 but doesn't report it\n  2: '== 1.0.0-rc.3',\n  3: '== 1.0.0-rc.4',\n  4: '== 1.x.x',\n  5: '== 2.0.0-alpha.x',\n  6: '>= 2.0.0-beta.1',\n  7: '>= 4.0.0 <4.3.0',\n  8: '>= 4.3.0'\n};\nexports.REVISION_CHANGES = REVISION_CHANGES;\nvar objectType = '[object Object]';\n\nfunction HandlebarsEnvironment(helpers, partials, decorators) {\n  this.helpers = helpers || {};\n  this.partials = partials || {};\n  this.decorators = decorators || {};\n\n  _helpers.registerDefaultHelpers(this);\n\n  _decorators.registerDefaultDecorators(this);\n}\n\nHandlebarsEnvironment.prototype = {\n  constructor: HandlebarsEnvironment,\n  logger: _logger2['default'],\n  log: _logger2['default'].log,\n  registerHelper: function registerHelper(name, fn) {\n    if (_utils.toString.call(name) === objectType) {\n      if (fn) {\n        throw new _exception2['default']('Arg not supported with multiple helpers');\n      }\n\n      _utils.extend(this.helpers, name);\n    } else {\n      this.helpers[name] = fn;\n    }\n  },\n  unregisterHelper: function unregisterHelper(name) {\n    delete this.helpers[name];\n  },\n  registerPartial: function registerPartial(name, partial) {\n    if (_utils.toString.call(name) === objectType) {\n      _utils.extend(this.partials, name);\n    } else {\n      if (typeof partial === 'undefined') {\n        throw new _exception2['default']('Attempting to register a partial called \"' + name + '\" as undefined');\n      }\n\n      this.partials[name] = partial;\n    }\n  },\n  unregisterPartial: function unregisterPartial(name) {\n    delete this.partials[name];\n  },\n  registerDecorator: function registerDecorator(name, fn) {\n    if (_utils.toString.call(name) === objectType) {\n      if (fn) {\n        throw new _exception2['default']('Arg not supported with multiple decorators');\n      }\n\n      _utils.extend(this.decorators, name);\n    } else {\n      this.decorators[name] = fn;\n    }\n  },\n  unregisterDecorator: function unregisterDecorator(name) {\n    delete this.decorators[name];\n  },\n\n  /**\n   * Reset the memory of illegal property accesses that have already been logged.\n   * @deprecated should only be used in handlebars test-cases\n   */\n  resetLoggedPropertyAccesses: function resetLoggedPropertyAccesses() {\n    _internalProtoAccess.resetLoggedProperties();\n  }\n};\nvar log = _logger2['default'].log;\nexports.log = log;\nexports.createFrame = _utils.createFrame;\nexports.logger = _logger2['default'];","map":{"version":3,"mappings":";;;;;;;;;;;qBAA8C;;yBACxB;;;;uBACiB;;0BACG;;sBACvB;;;;mCACmB;;AAE/B,IAAMA,OAAO,GAAG,OAAhB;;AACA,IAAMC,iBAAiB,GAAG,CAA1B;;AACA,IAAMC,iCAAiC,GAAG,CAA1C;;AAEA,IAAMC,gBAAgB,GAAG;AAC9B,KAAG,aAD2B;AACd;AAChB,KAAG,eAF2B;AAG9B,KAAG,eAH2B;AAI9B,KAAG,UAJ2B;AAK9B,KAAG,kBAL2B;AAM9B,KAAG,iBAN2B;AAO9B,KAAG,iBAP2B;AAQ9B,KAAG;AAR2B,CAAzB;;AAWP,IAAMC,UAAU,GAAG,iBAAnB;;AAEO,SAASC,qBAAT,CAA+BC,OAA/B,EAAwCC,QAAxC,EAAkDC,UAAlD,EAA8D;AACnE,OAAKF,OAAL,GAAeA,OAAO,IAAI,EAA1B;AACA,OAAKC,QAAL,GAAgBA,QAAQ,IAAI,EAA5B;AACA,OAAKC,UAAL,GAAkBA,UAAU,IAAI,EAAhC;;AAEAC,kCAAuB,IAAvB;;AACAC,wCAA0B,IAA1B;AACD;;AAEDL,qBAAqB,CAACM,SAAtB,GAAkC;AAChCC,aAAW,EAAEP,qBADmB;AAGhCQ,QAAM,qBAH0B;AAIhCC,KAAG,EAAEC,oBAAOD,GAJoB;AAMhCE,gBAAc,EAAE,wBAASC,IAAT,EAAeC,EAAf,EAAmB;AACjC,QAAIC,gBAASC,IAAT,CAAcH,IAAd,MAAwBb,UAA5B,EAAwC;AACtC,UAAIc,EAAJ,EAAQ;AACN,cAAM,2BAAc,yCAAd,CAAN;AACD;;AACDC,oBAAO,KAAKb,OAAZ,EAAqBW,IAArB;AACD,KALD,MAKO;AACL,WAAKX,OAAL,CAAaW,IAAb,IAAqBC,EAArB;AACD;AACF,GAf+B;AAgBhCG,kBAAgB,EAAE,0BAASJ,IAAT,EAAe;AAC/B,WAAO,KAAKX,OAAL,CAAaW,IAAb,CAAP;AACD,GAlB+B;AAoBhCK,iBAAe,EAAE,yBAASL,IAAT,EAAeM,OAAf,EAAwB;AACvC,QAAIJ,gBAASC,IAAT,CAAcH,IAAd,MAAwBb,UAA5B,EAAwC;AACtCe,oBAAO,KAAKZ,QAAZ,EAAsBU,IAAtB;AACD,KAFD,MAEO;AACL,UAAI,OAAOM,OAAP,KAAmB,WAAvB,EAAoC;AAClC,cAAM,yEACwCN,IADxC,GAC4C,gBAD5C,CAAN;AAGD;;AACD,WAAKV,QAAL,CAAcU,IAAd,IAAsBM,OAAtB;AACD;AACF,GA/B+B;AAgChCC,mBAAiB,EAAE,2BAASP,IAAT,EAAe;AAChC,WAAO,KAAKV,QAAL,CAAcU,IAAd,CAAP;AACD,GAlC+B;AAoChCQ,mBAAiB,EAAE,2BAASR,IAAT,EAAeC,EAAf,EAAmB;AACpC,QAAIC,gBAASC,IAAT,CAAcH,IAAd,MAAwBb,UAA5B,EAAwC;AACtC,UAAIc,EAAJ,EAAQ;AACN,cAAM,2BAAc,4CAAd,CAAN;AACD;;AACDC,oBAAO,KAAKX,UAAZ,EAAwBS,IAAxB;AACD,KALD,MAKO;AACL,WAAKT,UAAL,CAAgBS,IAAhB,IAAwBC,EAAxB;AACD;AACF,GA7C+B;AA8ChCQ,qBAAmB,EAAE,6BAAST,IAAT,EAAe;AAClC,WAAO,KAAKT,UAAL,CAAgBS,IAAhB,CAAP;AACD,GAhD+B;;;;;;AAqDhCU,6BAA2B,yCAAG;AAC5BC;AACD;AAvD+B,CAAlC;AA0DO,IAAId,GAAG,GAAGC,oBAAOD,GAAjB;;QAEEe,cAAWV;QAAEN,SAAME","names":["VERSION","COMPILER_REVISION","LAST_COMPATIBLE_COMPILER_REVISION","REVISION_CHANGES","objectType","HandlebarsEnvironment","helpers","partials","decorators","_helpers","_decorators","prototype","constructor","logger","log","_logger2","registerHelper","name","fn","_utils","call","unregisterHelper","registerPartial","partial","unregisterPartial","registerDecorator","unregisterDecorator","resetLoggedPropertyAccesses","_internalProtoAccess","createFrame"],"sources":["/Users/nandinineralagi/hw3/hw3-santorini-ndnrlg/frontend/node_modules/handlebars/lib/handlebars/base.js"],"sourcesContent":["import { createFrame, extend, toString } from './utils';\nimport Exception from './exception';\nimport { registerDefaultHelpers } from './helpers';\nimport { registerDefaultDecorators } from './decorators';\nimport logger from './logger';\nimport { resetLoggedProperties } from './internal/proto-access';\n\nexport const VERSION = '4.7.7';\nexport const COMPILER_REVISION = 8;\nexport const LAST_COMPATIBLE_COMPILER_REVISION = 7;\n\nexport const REVISION_CHANGES = {\n  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it\n  2: '== 1.0.0-rc.3',\n  3: '== 1.0.0-rc.4',\n  4: '== 1.x.x',\n  5: '== 2.0.0-alpha.x',\n  6: '>= 2.0.0-beta.1',\n  7: '>= 4.0.0 <4.3.0',\n  8: '>= 4.3.0'\n};\n\nconst objectType = '[object Object]';\n\nexport function HandlebarsEnvironment(helpers, partials, decorators) {\n  this.helpers = helpers || {};\n  this.partials = partials || {};\n  this.decorators = decorators || {};\n\n  registerDefaultHelpers(this);\n  registerDefaultDecorators(this);\n}\n\nHandlebarsEnvironment.prototype = {\n  constructor: HandlebarsEnvironment,\n\n  logger: logger,\n  log: logger.log,\n\n  registerHelper: function(name, fn) {\n    if (toString.call(name) === objectType) {\n      if (fn) {\n        throw new Exception('Arg not supported with multiple helpers');\n      }\n      extend(this.helpers, name);\n    } else {\n      this.helpers[name] = fn;\n    }\n  },\n  unregisterHelper: function(name) {\n    delete this.helpers[name];\n  },\n\n  registerPartial: function(name, partial) {\n    if (toString.call(name) === objectType) {\n      extend(this.partials, name);\n    } else {\n      if (typeof partial === 'undefined') {\n        throw new Exception(\n          `Attempting to register a partial called \"${name}\" as undefined`\n        );\n      }\n      this.partials[name] = partial;\n    }\n  },\n  unregisterPartial: function(name) {\n    delete this.partials[name];\n  },\n\n  registerDecorator: function(name, fn) {\n    if (toString.call(name) === objectType) {\n      if (fn) {\n        throw new Exception('Arg not supported with multiple decorators');\n      }\n      extend(this.decorators, name);\n    } else {\n      this.decorators[name] = fn;\n    }\n  },\n  unregisterDecorator: function(name) {\n    delete this.decorators[name];\n  },\n  /**\n   * Reset the memory of illegal property accesses that have already been logged.\n   * @deprecated should only be used in handlebars test-cases\n   */\n  resetLoggedPropertyAccesses() {\n    resetLoggedProperties();\n  }\n};\n\nexport let log = logger.log;\n\nexport { createFrame, logger };\n"]},"metadata":{},"sourceType":"script"}